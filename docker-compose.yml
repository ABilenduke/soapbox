version: '3'
services:

  #PHP Service
  php_fpm_app:
    build:
      context: .
      dockerfile: php.Dockerfile
    image: soapbox_php_fpm
    container_name: php_fpm_app
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      PHP_VERSION: ${PHP_VERSION}
      REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    env_file: ./.docker.env
    working_dir: ${REMOTE_WORKING_DIR}
    ports:
      - 9001:9001
    networks:
      - app-network
    volumes:
       - ./:/var/www/
       - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini

  #Node Service
  node_app:
    build:
      context: .
      dockerfile: node.Dockerfile
    image: soapbox_node_app
    container_name: node_app
    restart: unless-stopped
    tty: true
    environment:
      NODE_ENV: production
    working_dir: /var/www/
    networks:
      - app-network
    volumes:
       - ./:/var/www/

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php_fpm_app
      - node_app
    networks:
      - app-network
    volumes:
      - ./:/var/www/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
#      - ./nginx/conf.d/production/:/etc/nginx/conf.d/
      - ./nginx/log/:/var/log/nginx

  #MySQL Service
  mysql_db:
    image: mysql:5.7
    container_name: mysql_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  redis:
    build: ./redis
    image: soapbox_redis
    container_name: redis
    volumes:
      - ./redis:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

##Volumes
#volumes:
#  dbdata:
#    driver: local
